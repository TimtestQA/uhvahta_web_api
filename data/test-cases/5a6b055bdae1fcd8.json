{
  "uid" : "5a6b055bdae1fcd8",
  "name" : "Verify or continue - valid data",
  "fullName" : "tests.test_auth.TestAuth#test_verify_or_continue",
  "historyId" : "db2833fe1a701fb8942abfa3aa5e1ef5",
  "time" : {
    "start" : 1754277805313,
    "stop" : 1754277805314,
    "duration" : 1
  },
  "description" : "Test verify or continue endpoint with valid and invalid data.",
  "descriptionHtml" : "<p>Test verify or continue endpoint with valid and invalid data.</p>\n",
  "status" : "broken",
  "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/api/v1/auth/verify-or-continue': No scheme supplied. Perhaps you meant https:///api/v1/auth/verify-or-continue?",
  "statusTrace" : "self = <test_auth.TestAuth object at 0x7f951b36d4f0>\npayload = {'email': 'nonregitr@nonmail.ru', 'otp_code': '000000'}\nexpected = True\n\n    @allure.title(\"Verify or continue - valid data\")\n    @pytest.mark.parametrize(\"payload, expected\", [\n        pytest.param(Payloads.valid_verify(), True, id=\"valid data\"),\n        pytest.param(Payloads.invalid_verify(), True, id=\"invalid data - but still 200\"),  # API возвращает 200 даже для невалидных данных\n    ])\n    @pytest.mark.auth\n    def test_verify_or_continue(self, payload, expected):\n        \"\"\"Test verify or continue endpoint with valid and invalid data.\"\"\"\n>       response = self.auth_api.verify_or_continue(data=payload, success=expected)\n\ntests/test_auth.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/auth/api.py:22: in verify_or_continue\n    response = self.client.post(\nclient/api_client.py:103: in post\n    response = self._request(\"post\", endpoint, json=json, data=data, headers=headers, files=files, success=success)\nclient/api_client.py:59: in _request\n    response = self.session.request(method=method, url=url, headers=headers, **kwargs)\n../local/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n../local/lib/python3.12/site-packages/requests/sessions.py:484: in prepare_request\n    p.prepare(\n../local/lib/python3.12/site-packages/requests/models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = '/api/v1/auth/verify-or-continue'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '/api/v1/auth/verify-or-continue': No scheme supplied. Perhaps you meant https:///api/v1/auth/verify-or-continue?\n\n../local/lib/python3.12/site-packages/requests/models.py:438: MissingSchema",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestAuth",
    "time" : {
      "start" : 1754277805313,
      "stop" : 1754277805313,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1754277805248,
      "stop" : 1754277805249,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "Test verify or continue endpoint with valid and invalid data.",
    "status" : "broken",
    "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/api/v1/auth/verify-or-continue': No scheme supplied. Perhaps you meant https:///api/v1/auth/verify-or-continue?",
    "statusTrace" : "self = <test_auth.TestAuth object at 0x7f951b36d4f0>\npayload = {'email': 'nonregitr@nonmail.ru', 'otp_code': '000000'}\nexpected = True\n\n    @allure.title(\"Verify or continue - valid data\")\n    @pytest.mark.parametrize(\"payload, expected\", [\n        pytest.param(Payloads.valid_verify(), True, id=\"valid data\"),\n        pytest.param(Payloads.invalid_verify(), True, id=\"invalid data - but still 200\"),  # API возвращает 200 даже для невалидных данных\n    ])\n    @pytest.mark.auth\n    def test_verify_or_continue(self, payload, expected):\n        \"\"\"Test verify or continue endpoint with valid and invalid data.\"\"\"\n>       response = self.auth_api.verify_or_continue(data=payload, success=expected)\n\ntests/test_auth.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/auth/api.py:22: in verify_or_continue\n    response = self.client.post(\nclient/api_client.py:103: in post\n    response = self._request(\"post\", endpoint, json=json, data=data, headers=headers, files=files, success=success)\nclient/api_client.py:59: in _request\n    response = self.session.request(method=method, url=url, headers=headers, **kwargs)\n../local/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n../local/lib/python3.12/site-packages/requests/sessions.py:484: in prepare_request\n    p.prepare(\n../local/lib/python3.12/site-packages/requests/models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = '/api/v1/auth/verify-or-continue'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '/api/v1/auth/verify-or-continue': No scheme supplied. Perhaps you meant https:///api/v1/auth/verify-or-continue?\n\n../local/lib/python3.12/site-packages/requests/models.py:438: MissingSchema",
    "steps" : [ {
      "name" : "Verify or continue",
      "time" : {
        "start" : 1754277805313,
        "stop" : 1754277805314,
        "duration" : 1
      },
      "status" : "broken",
      "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/api/v1/auth/verify-or-continue': No scheme supplied. Perhaps you meant https:///api/v1/auth/verify-or-continue?\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/services/auth/api.py\", line 22, in verify_or_continue\n    response = self.client.post(\n               ^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/client/api_client.py\", line 103, in post\n    response = self._request(\"post\", endpoint, json=json, data=data, headers=headers, files=files, success=success)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/client/api_client.py\", line 59, in _request\n    response = self.session.request(method=method, url=url, headers=headers, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/requests/sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/requests/sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.12/site-packages/requests/models.py\", line 367, in prepare\n    self.prepare_url(url, params)\n  File \"/usr/local/lib/python3.12/site-packages/requests/models.py\", line 438, in prepare_url\n    raise MissingSchema(\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "15121d0eac1f507d",
        "name" : "request (json)",
        "source" : "15121d0eac1f507d.json",
        "type" : "application/json",
        "size" : 65
      } ],
      "parameters" : [ {
        "name" : "data",
        "value" : "{'email': 'nonregitr@nonmail.ru', 'otp_code': '000000'}"
      }, {
        "name" : "success",
        "value" : "True"
      } ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "57f9f92e4a8c1bb5",
      "name" : "log",
      "source" : "57f9f92e4a8c1bb5.txt",
      "type" : "text/plain",
      "size" : 91
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestAuth::0",
    "time" : {
      "start" : 1754277805343,
      "stop" : 1754277805343,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Auth"
  }, {
    "name" : "story",
    "value" : "Authentication"
  }, {
    "name" : "tag",
    "value" : "auth"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_auth"
  }, {
    "name" : "subSuite",
    "value" : "TestAuth"
  }, {
    "name" : "host",
    "value" : "5e7769cc4b5c"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected",
    "value" : "True"
  }, {
    "name" : "payload",
    "value" : "{'email': 'nonregitr@nonmail.ru', 'otp_code': '000000'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "auth" ]
  },
  "source" : "5a6b055bdae1fcd8.json",
  "parameterValues" : [ "True", "{'email': 'nonregitr@nonmail.ru', 'otp_code': '000000'}" ]
}